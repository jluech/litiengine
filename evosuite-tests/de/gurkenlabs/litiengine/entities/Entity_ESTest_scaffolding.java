/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Wed May 26 16:08:32 GMT 2021
 */

package de.gurkenlabs.litiengine.entities;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class Entity_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "de.gurkenlabs.litiengine.entities.Entity"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.home", "/home/jlue"); 
    java.lang.System.setProperty("user.dir", "/repos/litiengine"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Entity_ESTest_scaffolding.class.getClassLoader() ,
      "de.gurkenlabs.litiengine.entities.Trigger$TriggerActivation",
      "de.gurkenlabs.litiengine.environment.EnvironmentLoadedListener",
      "de.gurkenlabs.litiengine.graphics.AmbientLight",
      "de.gurkenlabs.litiengine.graphics.ColorLayer",
      "de.gurkenlabs.litiengine.util.MathUtilities",
      "de.gurkenlabs.litiengine.entities.CombatEntityHitListener",
      "de.gurkenlabs.litiengine.entities.EntityMovedEvent",
      "de.gurkenlabs.litiengine.physics.IMovementController",
      "de.gurkenlabs.litiengine.entities.IEntityController",
      "de.gurkenlabs.litiengine.entities.CollisionInfo",
      "de.gurkenlabs.litiengine.physics.GravityForce",
      "de.gurkenlabs.litiengine.configuration.ConfigurationGroupInfo",
      "de.gurkenlabs.litiengine.sound.SoundEngine",
      "de.gurkenlabs.litiengine.environment.EnvironmentEntityListener",
      "de.gurkenlabs.litiengine.entities.Creature",
      "de.gurkenlabs.litiengine.entities.CombatEntityListener",
      "de.gurkenlabs.litiengine.entities.CollisionEntity",
      "de.gurkenlabs.litiengine.graphics.RenderType",
      "de.gurkenlabs.litiengine.entities.IEntity",
      "de.gurkenlabs.litiengine.configuration.ConfigurationGroup",
      "de.gurkenlabs.litiengine.physics.CollisionEvent",
      "de.gurkenlabs.litiengine.environment.tilemap.IMapObjectLayer",
      "de.gurkenlabs.litiengine.entities.MovementInfo",
      "de.gurkenlabs.litiengine.entities.EntityMessageListener",
      "de.gurkenlabs.litiengine.entities.EntityActionMap",
      "de.gurkenlabs.litiengine.Game",
      "de.gurkenlabs.litiengine.environment.tilemap.xml.CustomPropertyProvider",
      "de.gurkenlabs.litiengine.sound.Track",
      "de.gurkenlabs.litiengine.ITimeToLive",
      "de.gurkenlabs.litiengine.entities.behavior.IBehaviorController",
      "de.gurkenlabs.litiengine.environment.tilemap.IMapObject",
      "de.gurkenlabs.litiengine.graphics.animation.IEntityAnimationController",
      "de.gurkenlabs.litiengine.configuration.GraphicConfiguration",
      "de.gurkenlabs.litiengine.environment.EnvironmentUnloadedListener",
      "de.gurkenlabs.litiengine.environment.tilemap.xml.Blueprint",
      "de.gurkenlabs.litiengine.entities.Tag",
      "de.gurkenlabs.litiengine.graphics.ICamera",
      "de.gurkenlabs.litiengine.graphics.StaticShadowLayer",
      "de.gurkenlabs.litiengine.entities.Prop",
      "de.gurkenlabs.litiengine.attributes.Attribute",
      "de.gurkenlabs.litiengine.sound.SoundEngine$1",
      "de.gurkenlabs.litiengine.sound.SFXPlayback",
      "de.gurkenlabs.litiengine.entities.Action",
      "de.gurkenlabs.litiengine.entities.ICollisionEntity",
      "de.gurkenlabs.litiengine.entities.CollisionListener",
      "de.gurkenlabs.litiengine.ILaunchable",
      "de.gurkenlabs.litiengine.physics.PhysicsEngine$Intersection",
      "de.gurkenlabs.litiengine.entities.MapArea",
      "de.gurkenlabs.litiengine.abilities.Ability",
      "de.gurkenlabs.litiengine.attributes.RangeAttribute",
      "de.gurkenlabs.litiengine.entities.TriggerDeactivatedListener",
      "de.gurkenlabs.litiengine.util.ReflectionUtilities",
      "de.gurkenlabs.litiengine.sound.Sound",
      "de.gurkenlabs.litiengine.graphics.IRenderable",
      "de.gurkenlabs.litiengine.tweening.Tweenable",
      "de.gurkenlabs.litiengine.IGameLoop",
      "de.gurkenlabs.litiengine.entities.ICombatEntity",
      "de.gurkenlabs.litiengine.entities.TriggerEvent",
      "de.gurkenlabs.litiengine.entities.EntityYComparator",
      "de.gurkenlabs.litiengine.environment.tilemap.MapObjectType",
      "de.gurkenlabs.litiengine.environment.tilemap.ILayerList",
      "de.gurkenlabs.litiengine.configuration.DisplayMode",
      "de.gurkenlabs.litiengine.tweening.TweenType",
      "de.gurkenlabs.litiengine.entities.IMobileEntity",
      "de.gurkenlabs.litiengine.graphics.animation.IAnimationController",
      "de.gurkenlabs.litiengine.configuration.Configuration",
      "de.gurkenlabs.litiengine.entities.CombatEntityDeathListener",
      "de.gurkenlabs.litiengine.entities.Entity",
      "de.gurkenlabs.litiengine.environment.tilemap.ICustomProperty",
      "de.gurkenlabs.litiengine.IUpdateable",
      "de.gurkenlabs.litiengine.physics.PhysicsEngine",
      "de.gurkenlabs.litiengine.environment.IMapObjectLoader",
      "de.gurkenlabs.litiengine.environment.EnvironmentListener",
      "de.gurkenlabs.litiengine.entities.StaticShadow",
      "de.gurkenlabs.litiengine.entities.EntityTransformListener",
      "de.gurkenlabs.litiengine.entities.CombatEntity",
      "de.gurkenlabs.litiengine.configuration.GameConfiguration",
      "de.gurkenlabs.litiengine.environment.tilemap.xml.MapObject",
      "de.gurkenlabs.litiengine.entities.Spawnpoint$EntitySpawnedListener",
      "de.gurkenlabs.litiengine.environment.tilemap.ILayer",
      "de.gurkenlabs.litiengine.entities.IMobileEntity$EntityMovedListener",
      "de.gurkenlabs.litiengine.entities.CombatInfo",
      "de.gurkenlabs.litiengine.entities.EntityPivotType",
      "de.gurkenlabs.litiengine.entities.TriggerListener",
      "de.gurkenlabs.litiengine.sound.SoundPlayback",
      "de.gurkenlabs.litiengine.entities.TriggerActivatedListener",
      "de.gurkenlabs.litiengine.resources.Resource",
      "de.gurkenlabs.litiengine.GameListener",
      "de.gurkenlabs.litiengine.entities.Trigger",
      "de.gurkenlabs.litiengine.entities.CombatEntityResurrectListener",
      "de.gurkenlabs.litiengine.graphics.animation.AnimationListener",
      "de.gurkenlabs.litiengine.entities.EntityInfo",
      "de.gurkenlabs.litiengine.entities.EntityAction",
      "de.gurkenlabs.litiengine.Align",
      "de.gurkenlabs.litiengine.environment.EnvironmentRenderedListener",
      "de.gurkenlabs.litiengine.entities.EntityRenderListener",
      "de.gurkenlabs.litiengine.entities.EntityMessageEvent",
      "de.gurkenlabs.litiengine.entities.Spawnpoint",
      "de.gurkenlabs.litiengine.ILoop",
      "de.gurkenlabs.litiengine.entities.Entity$1",
      "de.gurkenlabs.litiengine.physics.MovementController",
      "de.gurkenlabs.litiengine.entities.EntityListener",
      "de.gurkenlabs.litiengine.environment.tilemap.TmxType",
      "de.gurkenlabs.litiengine.entities.CollisionBox",
      "de.gurkenlabs.litiengine.entities.LightSource",
      "de.gurkenlabs.litiengine.environment.tilemap.ICustomPropertyProvider",
      "de.gurkenlabs.litiengine.environment.tilemap.IMap",
      "de.gurkenlabs.litiengine.entities.CollisionEntity$1",
      "de.gurkenlabs.litiengine.configuration.Quality",
      "de.gurkenlabs.litiengine.graphics.ImageEffect",
      "de.gurkenlabs.litiengine.entities.EntityControllers",
      "de.gurkenlabs.litiengine.physics.Collision",
      "de.gurkenlabs.litiengine.configuration.SoundConfiguration",
      "de.gurkenlabs.litiengine.graphics.animation.Animation",
      "de.gurkenlabs.litiengine.configuration.CleanProperties",
      "de.gurkenlabs.litiengine.Valign",
      "de.gurkenlabs.litiengine.entities.EntityRenderedListener",
      "de.gurkenlabs.litiengine.graphics.emitters.Emitter",
      "de.gurkenlabs.litiengine.entities.Tags",
      "de.gurkenlabs.litiengine.entities.TriggerActivatingCondition",
      "de.gurkenlabs.litiengine.physics.Force",
      "de.gurkenlabs.litiengine.configuration.ClientConfiguration",
      "de.gurkenlabs.litiengine.Direction",
      "de.gurkenlabs.litiengine.graphics.StaticShadowType",
      "de.gurkenlabs.litiengine.entities.EntityRenderEvent",
      "de.gurkenlabs.litiengine.environment.Environment",
      "de.gurkenlabs.litiengine.graphics.RenderEngine",
      "de.gurkenlabs.litiengine.entities.SoundSource"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("de.gurkenlabs.litiengine.entities.EntityListener", false, Entity_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("de.gurkenlabs.litiengine.entities.EntityMessageListener", false, Entity_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("de.gurkenlabs.litiengine.entities.EntityTransformListener", false, Entity_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("java.lang.ThreadGroup", false, Entity_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Entity_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "de.gurkenlabs.litiengine.entities.Entity",
      "de.gurkenlabs.litiengine.graphics.RenderType",
      "de.gurkenlabs.litiengine.physics.Collision",
      "de.gurkenlabs.litiengine.Valign",
      "de.gurkenlabs.litiengine.Align",
      "de.gurkenlabs.litiengine.environment.tilemap.MapObjectType",
      "de.gurkenlabs.litiengine.abilities.CastType",
      "de.gurkenlabs.litiengine.entities.EntityPivotType",
      "de.gurkenlabs.litiengine.entities.LightSource",
      "de.gurkenlabs.litiengine.entities.MapArea",
      "de.gurkenlabs.litiengine.entities.StaticShadow",
      "de.gurkenlabs.litiengine.graphics.RenderEngine",
      "de.gurkenlabs.litiengine.entities.EntityYComparator",
      "de.gurkenlabs.litiengine.sound.SoundEngine$1",
      "de.gurkenlabs.litiengine.sound.SoundEngine",
      "de.gurkenlabs.litiengine.physics.PhysicsEngine",
      "de.gurkenlabs.litiengine.configuration.Configuration",
      "de.gurkenlabs.litiengine.configuration.GameConfiguration",
      "de.gurkenlabs.litiengine.configuration.ConfigurationGroup",
      "de.gurkenlabs.litiengine.configuration.ClientConfiguration",
      "de.gurkenlabs.litiengine.util.ReflectionUtilities",
      "de.gurkenlabs.litiengine.configuration.SoundConfiguration",
      "de.gurkenlabs.litiengine.configuration.GraphicConfiguration",
      "de.gurkenlabs.litiengine.configuration.Quality",
      "de.gurkenlabs.litiengine.configuration.DisplayMode",
      "de.gurkenlabs.litiengine.Game",
      "de.gurkenlabs.litiengine.tweening.TweenType",
      "de.gurkenlabs.litiengine.entities.Entity$1",
      "de.gurkenlabs.litiengine.graphics.emitters.particles.ParticleType",
      "de.gurkenlabs.litiengine.entities.CollisionEntity",
      "de.gurkenlabs.litiengine.entities.Trigger",
      "de.gurkenlabs.litiengine.entities.EntityControllers",
      "de.gurkenlabs.litiengine.entities.EntityActionMap",
      "de.gurkenlabs.litiengine.environment.tilemap.xml.CustomPropertyProvider",
      "de.gurkenlabs.litiengine.util.MathUtilities",
      "de.gurkenlabs.litiengine.entities.CollisionBox",
      "de.gurkenlabs.litiengine.entities.Material",
      "de.gurkenlabs.litiengine.entities.CombatEntity",
      "de.gurkenlabs.litiengine.entities.Prop",
      "de.gurkenlabs.litiengine.attributes.Attribute",
      "de.gurkenlabs.litiengine.attributes.RangeAttribute",
      "de.gurkenlabs.litiengine.graphics.animation.AnimationController",
      "de.gurkenlabs.litiengine.graphics.animation.EntityAnimationController",
      "de.gurkenlabs.litiengine.graphics.animation.PropAnimationController",
      "de.gurkenlabs.litiengine.entities.Creature",
      "de.gurkenlabs.litiengine.physics.MovementController",
      "de.gurkenlabs.litiengine.graphics.animation.CreatureAnimationController",
      "de.gurkenlabs.litiengine.entities.SoundSource",
      "de.gurkenlabs.litiengine.environment.tilemap.xml.Layer",
      "de.gurkenlabs.litiengine.environment.tilemap.xml.MapObjectLayer",
      "de.gurkenlabs.litiengine.entities.Spawnpoint",
      "de.gurkenlabs.litiengine.environment.MapObjectLoader",
      "de.gurkenlabs.litiengine.environment.PropMapObjectLoader",
      "de.gurkenlabs.litiengine.environment.CollisionBoxMapObjectLoader",
      "de.gurkenlabs.litiengine.environment.TriggerMapObjectLoader",
      "de.gurkenlabs.litiengine.environment.EmitterMapObjectLoader",
      "de.gurkenlabs.litiengine.environment.LightSourceMapObjectLoader",
      "de.gurkenlabs.litiengine.environment.SpawnpointMapObjectLoader",
      "de.gurkenlabs.litiengine.environment.MapAreaMapObjectLoader",
      "de.gurkenlabs.litiengine.environment.StaticShadowMapObjectLoader",
      "de.gurkenlabs.litiengine.environment.CreatureMapObjectLoader",
      "de.gurkenlabs.litiengine.environment.SoundSourceMapObjectLoader",
      "de.gurkenlabs.litiengine.environment.Environment",
      "de.gurkenlabs.litiengine.resources.ResourcesContainer$1",
      "de.gurkenlabs.litiengine.resources.ResourcesContainer",
      "de.gurkenlabs.litiengine.resources.Resources",
      "de.gurkenlabs.litiengine.environment.tilemap.xml.TmxMap",
      "de.gurkenlabs.litiengine.environment.tilemap.RenderOrder",
      "de.gurkenlabs.litiengine.environment.tilemap.xml.MapObject",
      "de.gurkenlabs.litiengine.environment.tilemap.xml.Blueprint",
      "de.gurkenlabs.litiengine.environment.tilemap.xml.CustomProperty",
      "de.gurkenlabs.litiengine.environment.tilemap.xml.Tile",
      "de.gurkenlabs.litiengine.entities.CollisionEntity$1",
      "de.gurkenlabs.litiengine.entities.EntityAction",
      "de.gurkenlabs.litiengine.graphics.ColorLayer",
      "de.gurkenlabs.litiengine.graphics.AmbientLight",
      "de.gurkenlabs.litiengine.environment.CustomMapObjectLoader",
      "de.gurkenlabs.litiengine.abilities.Ability",
      "de.gurkenlabs.litiengine.attributes.AttributeModifier",
      "de.gurkenlabs.litiengine.attributes.Modification",
      "de.gurkenlabs.litiengine.attributes.AttributeModifier$1",
      "de.gurkenlabs.litiengine.entities.EntityHitEvent",
      "de.gurkenlabs.litiengine.physics.CollisionEvent",
      "de.gurkenlabs.litiengine.util.Imaging",
      "de.gurkenlabs.litiengine.graphics.MouseCursor",
      "de.gurkenlabs.litiengine.sound.Sound",
      "de.gurkenlabs.litiengine.util.io.StreamUtilities",
      "de.gurkenlabs.litiengine.entities.EntityRenderEvent",
      "de.gurkenlabs.litiengine.util.geom.GeometricUtilities",
      "de.gurkenlabs.litiengine.environment.tilemap.MapOrientations$Base",
      "de.gurkenlabs.litiengine.environment.tilemap.MapOrientations$Orthogonal",
      "de.gurkenlabs.litiengine.environment.tilemap.MapOrientations$Isometric",
      "de.gurkenlabs.litiengine.environment.tilemap.MapOrientations$StaggeredIsometric",
      "de.gurkenlabs.litiengine.environment.tilemap.MapOrientations$Hexagonal",
      "de.gurkenlabs.litiengine.environment.tilemap.MapOrientations",
      "de.gurkenlabs.litiengine.entities.EntityMessageEvent",
      "de.gurkenlabs.litiengine.util.ColorHelper",
      "de.gurkenlabs.litiengine.graphics.emitters.xml.EmitterData",
      "de.gurkenlabs.litiengine.graphics.emitters.xml.ParticleParameter",
      "de.gurkenlabs.litiengine.util.ArrayUtilities",
      "de.gurkenlabs.litiengine.environment.tilemap.xml.ImageLayer",
      "de.gurkenlabs.litiengine.environment.tilemap.xml.GroupLayer"
    );
  }
}
