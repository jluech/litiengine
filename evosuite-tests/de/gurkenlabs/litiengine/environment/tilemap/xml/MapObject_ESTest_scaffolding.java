/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Thu May 27 07:29:06 GMT 2021
 */

package de.gurkenlabs.litiengine.environment.tilemap.xml;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class MapObject_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "de.gurkenlabs.litiengine.environment.tilemap.xml.MapObject"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("sun.java.launcher", "SUN_STANDARD"); 
    java.lang.System.setProperty("user.dir", "C:\\Source\\litiengine"); 
    java.lang.System.setProperty("java.io.tmpdir", "C:\\Users\\niels\\AppData\\Local\\Temp\\"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MapObject_ESTest_scaffolding.class.getClassLoader() ,
      "de.gurkenlabs.litiengine.physics.PhysicsEngine",
      "de.gurkenlabs.litiengine.environment.EnvironmentLoadedListener",
      "de.gurkenlabs.litiengine.configuration.GameConfiguration",
      "de.gurkenlabs.litiengine.environment.tilemap.ITileAnimation",
      "de.gurkenlabs.litiengine.environment.tilemap.xml.MapObject",
      "de.gurkenlabs.litiengine.environment.tilemap.ILayer",
      "de.gurkenlabs.litiengine.environment.tilemap.ITerrain",
      "de.gurkenlabs.litiengine.configuration.ConfigurationGroupInfo",
      "de.gurkenlabs.litiengine.environment.tilemap.IMapOrientation",
      "de.gurkenlabs.litiengine.sound.SoundEngine",
      "de.gurkenlabs.litiengine.resources.Resource",
      "de.gurkenlabs.litiengine.GameListener",
      "de.gurkenlabs.litiengine.graphics.RenderType",
      "de.gurkenlabs.litiengine.environment.tilemap.RenderOrder",
      "de.gurkenlabs.litiengine.entities.IEntity",
      "de.gurkenlabs.litiengine.configuration.ConfigurationGroup",
      "de.gurkenlabs.litiengine.Align",
      "de.gurkenlabs.litiengine.environment.tilemap.IMapObjectLayer",
      "de.gurkenlabs.litiengine.environment.tilemap.IPolyShape",
      "de.gurkenlabs.litiengine.ILoop",
      "de.gurkenlabs.litiengine.Game",
      "de.gurkenlabs.litiengine.environment.tilemap.xml.UnsupportedMapVersionException",
      "de.gurkenlabs.litiengine.environment.tilemap.ITileset",
      "de.gurkenlabs.litiengine.environment.tilemap.xml.CustomPropertyProvider",
      "de.gurkenlabs.litiengine.sound.Track",
      "de.gurkenlabs.litiengine.environment.tilemap.IMapObjectText",
      "de.gurkenlabs.litiengine.environment.tilemap.ICustomPropertyProvider",
      "de.gurkenlabs.litiengine.environment.tilemap.IMap",
      "de.gurkenlabs.litiengine.environment.tilemap.StaggerIndex",
      "de.gurkenlabs.litiengine.environment.tilemap.IMapObject",
      "de.gurkenlabs.litiengine.configuration.Quality",
      "de.gurkenlabs.litiengine.environment.tilemap.xml.Blueprint",
      "de.gurkenlabs.litiengine.configuration.GraphicConfiguration",
      "de.gurkenlabs.litiengine.graphics.ICamera",
      "de.gurkenlabs.litiengine.physics.Collision",
      "de.gurkenlabs.litiengine.environment.tilemap.StaggerAxis",
      "de.gurkenlabs.litiengine.configuration.SoundConfiguration",
      "de.gurkenlabs.litiengine.sound.SoundEngine$1",
      "de.gurkenlabs.litiengine.environment.tilemap.xml.MapObjectLayer",
      "de.gurkenlabs.litiengine.environment.tilemap.xml.TmxException",
      "de.gurkenlabs.litiengine.entities.ICollisionEntity",
      "de.gurkenlabs.litiengine.configuration.CleanProperties",
      "de.gurkenlabs.litiengine.ILaunchable",
      "de.gurkenlabs.litiengine.physics.PhysicsEngine$Intersection",
      "de.gurkenlabs.litiengine.Valign",
      "de.gurkenlabs.litiengine.util.ReflectionUtilities",
      "de.gurkenlabs.litiengine.environment.tilemap.xml.TmxMap",
      "de.gurkenlabs.litiengine.IGameLoop",
      "de.gurkenlabs.litiengine.entities.EntityYComparator",
      "de.gurkenlabs.litiengine.environment.tilemap.ITilesetEntry",
      "de.gurkenlabs.litiengine.environment.tilemap.ILayerList",
      "de.gurkenlabs.litiengine.configuration.ClientConfiguration",
      "de.gurkenlabs.litiengine.environment.tilemap.MapObjectType",
      "de.gurkenlabs.litiengine.configuration.DisplayMode",
      "de.gurkenlabs.litiengine.environment.tilemap.xml.Layer",
      "de.gurkenlabs.litiengine.graphics.RenderEngine",
      "de.gurkenlabs.litiengine.configuration.Configuration",
      "de.gurkenlabs.litiengine.environment.tilemap.xml.PolyShape",
      "de.gurkenlabs.litiengine.environment.tilemap.ICustomProperty",
      "de.gurkenlabs.litiengine.IUpdateable"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MapObject_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "de.gurkenlabs.litiengine.environment.tilemap.xml.CustomPropertyProvider",
      "de.gurkenlabs.litiengine.environment.tilemap.xml.MapObject",
      "de.gurkenlabs.litiengine.graphics.RenderEngine",
      "de.gurkenlabs.litiengine.entities.EntityYComparator",
      "de.gurkenlabs.litiengine.sound.SoundEngine$1",
      "de.gurkenlabs.litiengine.sound.SoundEngine",
      "de.gurkenlabs.litiengine.physics.PhysicsEngine",
      "de.gurkenlabs.litiengine.physics.Collision",
      "de.gurkenlabs.litiengine.configuration.Configuration",
      "de.gurkenlabs.litiengine.configuration.GameConfiguration",
      "de.gurkenlabs.litiengine.configuration.ConfigurationGroup",
      "de.gurkenlabs.litiengine.configuration.ClientConfiguration",
      "de.gurkenlabs.litiengine.util.ReflectionUtilities",
      "de.gurkenlabs.litiengine.configuration.SoundConfiguration",
      "de.gurkenlabs.litiengine.configuration.GraphicConfiguration",
      "de.gurkenlabs.litiengine.configuration.Quality",
      "de.gurkenlabs.litiengine.configuration.DisplayMode",
      "de.gurkenlabs.litiengine.Game",
      "de.gurkenlabs.litiengine.environment.tilemap.xml.Blueprint",
      "de.gurkenlabs.litiengine.environment.tilemap.xml.PolyShape",
      "de.gurkenlabs.litiengine.environment.tilemap.xml.Layer",
      "de.gurkenlabs.litiengine.environment.tilemap.xml.MapObjectLayer",
      "de.gurkenlabs.litiengine.environment.tilemap.xml.CustomProperty",
      "de.gurkenlabs.litiengine.util.ColorHelper",
      "de.gurkenlabs.litiengine.environment.tilemap.MapObjectType",
      "de.gurkenlabs.litiengine.environment.tilemap.xml.Tileset",
      "de.gurkenlabs.litiengine.resources.ResourcesContainer$1",
      "de.gurkenlabs.litiengine.resources.ResourcesContainer",
      "de.gurkenlabs.litiengine.resources.Resources",
      "de.gurkenlabs.litiengine.environment.tilemap.xml.TilesetEntry",
      "de.gurkenlabs.litiengine.environment.tilemap.xml.TmxMap",
      "de.gurkenlabs.litiengine.environment.tilemap.xml.Tile",
      "de.gurkenlabs.litiengine.environment.tilemap.RenderOrder",
      "de.gurkenlabs.litiengine.graphics.RenderType",
      "de.gurkenlabs.litiengine.util.AlphanumComparator",
      "de.gurkenlabs.litiengine.resources.NamedResource",
      "de.gurkenlabs.litiengine.resources.SoundResource",
      "de.gurkenlabs.litiengine.resources.SoundFormat",
      "de.gurkenlabs.litiengine.environment.tilemap.MapOrientations$Base",
      "de.gurkenlabs.litiengine.environment.tilemap.MapOrientations$Orthogonal",
      "de.gurkenlabs.litiengine.environment.tilemap.MapOrientations$Isometric",
      "de.gurkenlabs.litiengine.environment.tilemap.MapOrientations$StaggeredIsometric",
      "de.gurkenlabs.litiengine.environment.tilemap.MapOrientations$Hexagonal",
      "de.gurkenlabs.litiengine.environment.tilemap.MapOrientations",
      "de.gurkenlabs.litiengine.resources.SpritesheetResource",
      "de.gurkenlabs.litiengine.environment.tilemap.xml.ImageLayer",
      "de.gurkenlabs.litiengine.util.io.FileUtilities",
      "de.gurkenlabs.litiengine.sound.Sound",
      "de.gurkenlabs.litiengine.util.io.StreamUtilities",
      "de.gurkenlabs.litiengine.environment.tilemap.xml.GroupLayer"
    );
  }
}
